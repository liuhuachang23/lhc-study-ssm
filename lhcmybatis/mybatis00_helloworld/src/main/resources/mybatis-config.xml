<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
        MyBatis 核 心 配 置 文 件 中 ， 标 签 的 顺 序 ：
        properties?,settings?,typeAliases?,typeHandlers?, objectFactory?,objectWrapperFactory?,
        reflectorFactory?, plugins?,environments?,databaseIdProvider?,mappers?
    -->

    <!--1. 引入properties文件，此后就可以在当前文件中使用 ${key}的方式访问 value-->
    <properties resource="jdbc.properties"/>

    <!--2. 设置类型别名-->
    <typeAliases>
        <!--
        typeAlias：设置某个类型的别名
            属性：
                type：设置需要设置别名的类型
                alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名 且不区分大小写
        -->

        <!--1） 设置单个类型的别名  -->
        <!--<typeAlias type="com.lhc.mybatis.pojo.User"></typeAlias>-->

        <!--2） 以包为单位，将包下所有的类型设置默认的类型别名，即类名 且不区分大小写-->
        <package name="com.lhc.mybatis.pojo"/>

    </typeAliases>

    <!--3. 配置连接数据库的环境-->
    <!--
        environments：配置多个连接数据库的环境
            属性 default：设置默认使用的环境的id
    -->
    <environments default="development">
        <!--
            environment：配置某个具体的环境
                属性 id：表示连接数据库的环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager：设置事务管理方式
                    属性 type="JDBC|MANAGED"
                        JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式
                        MANAGED：被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource：配置数据源
                    属性 type：设置数据源的类型 type="POOLED|UNPOOLED|JNDI"
                        POOLED：表示使用数据库连接池缓存数据库连接
                        UNPOOLED：表示不使用数据库连接池
                        JNDI：表示使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <!-- 改为读取配置文件的方式 -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>


        <environment id="test">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/ssmserverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>

    </environments>


    <!--4. 引入mybatis映射文件-->
    <mappers>
        <!-- 1) 引入单个映射文件 -->
        <!--<mapper resource="mappers/UserMapper.xml"/>-->

        <!--
            2）以包的方式引入配置文件，但是必须满足两个条件：
                ① mapper接口 和 映射文件的 所在的包必须一致
                    java和resources 两个目录只是用来将 java文件和配置文件分开书写的目录，程序加载后 两个目录的文件会加载到同一class类路径下
                ② mapper接口的名字 和 映射文件的名字 必须保持一致
        -->
        <package name="com.lhc.mybatis.mapper"/>
    </mappers>

</configuration>