<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--扫描组件-->
    <context:component-scan base-package="com.lhc.spring"></context:component-scan>

    <!-- 导入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置 JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- 装配数据源 -->
        <property name="dataSource" ref="druidDataSource"/>
    </bean>

    <!--配置事务管理器 （切面）-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--给数据源属性 赋值-->
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>

    <!--开启事务的注解驱动
        将使用@Transactional注解标识的方法或类中所有方法都使用事务进行管理
        即：将切面（事务管理器）中的 通知方法（事务方法）作用于 目标对象连接点（被@Transactional标记的类或方法）

            transaction-manager属性：指定事务管理器
                1）事务管理器id默认为transactionManager
                2）transaction-manager属性值默认为transactionManager
                即：在事务管理器未修改id的情况下，都可以不写，会默认指定

    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>